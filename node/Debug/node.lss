
node.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000432  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  000004a6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004a6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000518  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000006d2  00000000  00000000  00000550  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000625  00000000  00000000  00000c22  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000040e  00000000  00000000  00001247  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c0  00000000  00000000  00001658  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000368  00000000  00000000  00001718  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000150  00000000  00000000  00001a80  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00001bd0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4a 00 	jmp	0x94	; 0x94 <__ctors_end>
   4:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
   8:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
   c:	0c 94 e3 00 	jmp	0x1c6	; 0x1c6 <__vector_3>
  10:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__vector_4>
  14:	0c 94 74 01 	jmp	0x2e8	; 0x2e8 <__vector_5>
  18:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  1c:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  20:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  24:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  28:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  2c:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  30:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  34:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  38:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  3c:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  40:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  44:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  48:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  4c:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  50:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  54:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  58:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  5c:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  60:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  64:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <__bad_interrupt>
  68:	fe 00       	.word	0x00fe	; ????
  6a:	0b 01       	movw	r0, r22
  6c:	19 01       	movw	r2, r18
  6e:	27 01       	movw	r4, r14
  70:	36 01       	movw	r6, r12
  72:	67 01       	movw	r12, r14
  74:	67 01       	movw	r12, r14
  76:	67 01       	movw	r12, r14
  78:	67 01       	movw	r12, r14
  7a:	67 01       	movw	r12, r14
  7c:	44 01       	movw	r8, r8
  7e:	54 01       	movw	r10, r8
  80:	8f 01       	movw	r16, r30
  82:	9d 01       	movw	r18, r26
  84:	b3 01       	movw	r22, r6
  86:	c1 01       	movw	r24, r2
  88:	cf 01       	movw	r24, r30
  8a:	04 02       	muls	r16, r20
  8c:	04 02       	muls	r16, r20
  8e:	e0 01       	movw	r28, r0
  90:	ed 01       	movw	r28, r26
  92:	fb 01       	movw	r30, r22

00000094 <__ctors_end>:
  94:	11 24       	eor	r1, r1
  96:	1f be       	out	0x3f, r1	; 63
  98:	cf ef       	ldi	r28, 0xFF	; 255
  9a:	d8 e0       	ldi	r29, 0x08	; 8
  9c:	de bf       	out	0x3e, r29	; 62
  9e:	cd bf       	out	0x3d, r28	; 61

000000a0 <__do_clear_bss>:
  a0:	21 e0       	ldi	r18, 0x01	; 1
  a2:	a0 e0       	ldi	r26, 0x00	; 0
  a4:	b1 e0       	ldi	r27, 0x01	; 1
  a6:	01 c0       	rjmp	.+2      	; 0xaa <.do_clear_bss_start>

000000a8 <.do_clear_bss_loop>:
  a8:	1d 92       	st	X+, r1

000000aa <.do_clear_bss_start>:
  aa:	a1 30       	cpi	r26, 0x01	; 1
  ac:	b2 07       	cpc	r27, r18
  ae:	e1 f7       	brne	.-8      	; 0xa8 <.do_clear_bss_loop>
  b0:	0e 94 5e 00 	call	0xbc	; 0xbc <main>
  b4:	0c 94 17 02 	jmp	0x42e	; 0x42e <_exit>

000000b8 <__bad_interrupt>:
  b8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000bc <main>:
volatile uint8_t n;

int main(void)
{
	//Variable initialization
	n = 0;														//set initial zero
  bc:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
	
	MCUCR |= (1 << PUD);
  c0:	85 b7       	in	r24, 0x35	; 53
  c2:	80 61       	ori	r24, 0x10	; 16
  c4:	85 bf       	out	0x35, r24	; 53

	//PCINT register 
    PCICR = 0x07;		//enable all three PCINT
  c6:	87 e0       	ldi	r24, 0x07	; 7
  c8:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
    PCMSK1 = (1  << PCINT12);
  cc:	80 e1       	ldi	r24, 0x10	; 16
  ce:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
	PORTB = 0xFF;
  d2:	8f ef       	ldi	r24, 0xFF	; 255
  d4:	85 b9       	out	0x05, r24	; 5
	PORTC = 0x7F;
  d6:	9f e7       	ldi	r25, 0x7F	; 127
  d8:	98 b9       	out	0x08, r25	; 8
	PORTD = 0xFF;
  da:	8b b9       	out	0x0b, r24	; 11
    
	//GPIO
	DDRC = (1 << PORTC5);										//Set PORTC5 as output
  dc:	80 e2       	ldi	r24, 0x20	; 32
  de:	87 b9       	out	0x07, r24	; 7
	PORTC |= (1 << PORTC5);
  e0:	45 9a       	sbi	0x08, 5	; 8

    sei();														//enable global interrupt
  e2:	78 94       	sei
    while (1) 
    {

    }
  e4:	ff cf       	rjmp	.-2      	; 0xe4 <main+0x28>

000000e6 <__vector_4>:
}

ISR(PCINT1_vect){
  e6:	1f 92       	push	r1
  e8:	0f 92       	push	r0
  ea:	0f b6       	in	r0, 0x3f	; 63
  ec:	0f 92       	push	r0
  ee:	11 24       	eor	r1, r1
  f0:	2f 93       	push	r18
  f2:	8f 93       	push	r24
  f4:	9f 93       	push	r25
	PCIFR = (1 << PCIF1);
  f6:	92 e0       	ldi	r25, 0x02	; 2
  f8:	9b bb       	out	0x1b, r25	; 27
	switch(n){
  fa:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  fe:	82 30       	cpi	r24, 0x02	; 2
 100:	b9 f1       	breq	.+110    	; 0x170 <__vector_4+0x8a>
 102:	98 f4       	brcc	.+38     	; 0x12a <__vector_4+0x44>
 104:	88 23       	and	r24, r24
 106:	31 f1       	breq	.+76     	; 0x154 <__vector_4+0x6e>
 108:	81 30       	cpi	r24, 0x01	; 1
 10a:	09 f0       	breq	.+2      	; 0x10e <__vector_4+0x28>
 10c:	52 c0       	rjmp	.+164    	; 0x1b2 <__vector_4+0xcc>
		case 0 : PCMSK1 ^= (1  << PCINT12);
				 PORTC ^= (1 << PORTC5);
				 PCMSK1 ^= (1  << PCINT11);
				 n++;
				 break;
		case 1 : PCMSK1 ^= (1  << PCINT11);
 10e:	90 91 6c 00 	lds	r25, 0x006C	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
 112:	88 e0       	ldi	r24, 0x08	; 8
 114:	89 27       	eor	r24, r25
 116:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
				 PORTC ^= (1 << PORTC5);
 11a:	98 b1       	in	r25, 0x08	; 8
 11c:	80 e2       	ldi	r24, 0x20	; 32
 11e:	89 27       	eor	r24, r25
 120:	88 b9       	out	0x08, r24	; 8
				 PCMSK1 ^= (1  << PCINT10);
 122:	90 91 6c 00 	lds	r25, 0x006C	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
 126:	84 e0       	ldi	r24, 0x04	; 4
 128:	3c c0       	rjmp	.+120    	; 0x1a2 <__vector_4+0xbc>
    }
}

ISR(PCINT1_vect){
	PCIFR = (1 << PCIF1);
	switch(n){
 12a:	83 30       	cpi	r24, 0x03	; 3
 12c:	71 f1       	breq	.+92     	; 0x18a <__vector_4+0xa4>
 12e:	84 30       	cpi	r24, 0x04	; 4
 130:	09 f0       	breq	.+2      	; 0x134 <__vector_4+0x4e>
 132:	3f c0       	rjmp	.+126    	; 0x1b2 <__vector_4+0xcc>
		case 3 : PCMSK1 ^= (1  << PCINT9);
				 PORTC ^= (1 << PORTC5);
				 PCMSK1 ^= (1  << PCINT8);
				 n++;
				 break;
		case 4 : PCMSK1 ^= (1  << PCINT8);
 134:	90 91 6c 00 	lds	r25, 0x006C	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	89 27       	eor	r24, r25
 13c:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
				 PORTC ^= (1 << PORTC5);
 140:	98 b1       	in	r25, 0x08	; 8
 142:	80 e2       	ldi	r24, 0x20	; 32
 144:	98 27       	eor	r25, r24
 146:	98 b9       	out	0x08, r25	; 8
				 PCMSK0 ^= (1  << PCINT5);
 148:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
 14c:	89 27       	eor	r24, r25
 14e:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
 152:	2a c0       	rjmp	.+84     	; 0x1a8 <__vector_4+0xc2>
}

ISR(PCINT1_vect){
	PCIFR = (1 << PCIF1);
	switch(n){
		case 0 : PCMSK1 ^= (1  << PCINT12);
 154:	90 91 6c 00 	lds	r25, 0x006C	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
 158:	80 e1       	ldi	r24, 0x10	; 16
 15a:	89 27       	eor	r24, r25
 15c:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
				 PORTC ^= (1 << PORTC5);
 160:	98 b1       	in	r25, 0x08	; 8
 162:	80 e2       	ldi	r24, 0x20	; 32
 164:	89 27       	eor	r24, r25
 166:	88 b9       	out	0x08, r24	; 8
				 PCMSK1 ^= (1  << PCINT11);
 168:	90 91 6c 00 	lds	r25, 0x006C	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
 16c:	88 e0       	ldi	r24, 0x08	; 8
 16e:	19 c0       	rjmp	.+50     	; 0x1a2 <__vector_4+0xbc>
		case 1 : PCMSK1 ^= (1  << PCINT11);
				 PORTC ^= (1 << PORTC5);
				 PCMSK1 ^= (1  << PCINT10);
				 n++;	
				 break;
		case 2 : PCMSK1 ^= (1  << PCINT10);
 170:	20 91 6c 00 	lds	r18, 0x006C	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
 174:	94 e0       	ldi	r25, 0x04	; 4
 176:	92 27       	eor	r25, r18
 178:	90 93 6c 00 	sts	0x006C, r25	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
				 PORTC ^= (1 << PORTC5);
 17c:	28 b1       	in	r18, 0x08	; 8
 17e:	90 e2       	ldi	r25, 0x20	; 32
 180:	92 27       	eor	r25, r18
 182:	98 b9       	out	0x08, r25	; 8
				 PCMSK1 ^= (1  << PCINT9);
 184:	90 91 6c 00 	lds	r25, 0x006C	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
 188:	0c c0       	rjmp	.+24     	; 0x1a2 <__vector_4+0xbc>
				 n++;
				 break;
		case 3 : PCMSK1 ^= (1  << PCINT9);
 18a:	80 91 6c 00 	lds	r24, 0x006C	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
 18e:	98 27       	eor	r25, r24
 190:	90 93 6c 00 	sts	0x006C, r25	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
				 PORTC ^= (1 << PORTC5);
 194:	98 b1       	in	r25, 0x08	; 8
 196:	80 e2       	ldi	r24, 0x20	; 32
 198:	89 27       	eor	r24, r25
 19a:	88 b9       	out	0x08, r24	; 8
				 PCMSK1 ^= (1  << PCINT8);
 19c:	90 91 6c 00 	lds	r25, 0x006C	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	89 27       	eor	r24, r25
 1a4:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
				 n++;
				 break;
		case 4 : PCMSK1 ^= (1  << PCINT8);
				 PORTC ^= (1 << PORTC5);
				 PCMSK0 ^= (1  << PCINT5);
				 n++;
 1a8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 1ac:	8f 5f       	subi	r24, 0xFF	; 255
 1ae:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
				 break;
		default: break;
	}
	PCIFR = (1 << PCIF1);
 1b2:	82 e0       	ldi	r24, 0x02	; 2
 1b4:	8b bb       	out	0x1b, r24	; 27
}
 1b6:	9f 91       	pop	r25
 1b8:	8f 91       	pop	r24
 1ba:	2f 91       	pop	r18
 1bc:	0f 90       	pop	r0
 1be:	0f be       	out	0x3f, r0	; 63
 1c0:	0f 90       	pop	r0
 1c2:	1f 90       	pop	r1
 1c4:	18 95       	reti

000001c6 <__vector_3>:

ISR(PCINT0_vect){
 1c6:	1f 92       	push	r1
 1c8:	0f 92       	push	r0
 1ca:	0f b6       	in	r0, 0x3f	; 63
 1cc:	0f 92       	push	r0
 1ce:	11 24       	eor	r1, r1
 1d0:	8f 93       	push	r24
 1d2:	9f 93       	push	r25
 1d4:	af 93       	push	r26
 1d6:	bf 93       	push	r27
 1d8:	ef 93       	push	r30
 1da:	ff 93       	push	r31
PCIFR = (1 << PCIF0);
 1dc:	81 e0       	ldi	r24, 0x01	; 1
 1de:	8b bb       	out	0x1b, r24	; 27
	switch(n){
 1e0:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <_edata>
 1e4:	8e 2f       	mov	r24, r30
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	fc 01       	movw	r30, r24
 1ea:	35 97       	sbiw	r30, 0x05	; 5
 1ec:	ec 30       	cpi	r30, 0x0C	; 12
 1ee:	f1 05       	cpc	r31, r1
 1f0:	08 f0       	brcs	.+2      	; 0x1f4 <__vector_3+0x2e>
 1f2:	6d c0       	rjmp	.+218    	; 0x2ce <__vector_3+0x108>
 1f4:	ec 5c       	subi	r30, 0xCC	; 204
 1f6:	ff 4f       	sbci	r31, 0xFF	; 255
 1f8:	0c 94 11 02 	jmp	0x422	; 0x422 <__tablejump2__>
		case 5 : PCMSK0 ^= (1  << PCINT5);
 1fc:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
 200:	80 e2       	ldi	r24, 0x20	; 32
 202:	98 27       	eor	r25, r24
 204:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
				 PORTC ^= (1 << PORTC5);
 208:	98 b1       	in	r25, 0x08	; 8
 20a:	89 27       	eor	r24, r25
 20c:	88 b9       	out	0x08, r24	; 8
				 PCMSK0 ^= (1  << PCINT4);
 20e:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
 212:	80 e1       	ldi	r24, 0x10	; 16
 214:	29 c0       	rjmp	.+82     	; 0x268 <__vector_3+0xa2>
				 n++;
				 break;
		case 6 : PCMSK0 ^= (1  << PCINT4);
 216:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
 21a:	80 e1       	ldi	r24, 0x10	; 16
 21c:	89 27       	eor	r24, r25
 21e:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
				 PORTC ^= (1 << PORTC5);
 222:	98 b1       	in	r25, 0x08	; 8
 224:	80 e2       	ldi	r24, 0x20	; 32
 226:	89 27       	eor	r24, r25
 228:	88 b9       	out	0x08, r24	; 8
				 PCMSK0 ^= (1  << PCINT3);
 22a:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
 22e:	88 e0       	ldi	r24, 0x08	; 8
 230:	1b c0       	rjmp	.+54     	; 0x268 <__vector_3+0xa2>
				 n++;
				 break;
		case 7 : PCMSK0 ^= (1  << PCINT3);
 232:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
 236:	88 e0       	ldi	r24, 0x08	; 8
 238:	89 27       	eor	r24, r25
 23a:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
				 PORTC ^= (1 << PORTC5);
 23e:	98 b1       	in	r25, 0x08	; 8
 240:	80 e2       	ldi	r24, 0x20	; 32
 242:	89 27       	eor	r24, r25
 244:	88 b9       	out	0x08, r24	; 8
				 PCMSK0 ^= (1  << PCINT2);
 246:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
 24a:	84 e0       	ldi	r24, 0x04	; 4
 24c:	0d c0       	rjmp	.+26     	; 0x268 <__vector_3+0xa2>
				 n++;
				 break;
		case 8 : PCMSK0 ^= (1  << PCINT2);
 24e:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
 252:	84 e0       	ldi	r24, 0x04	; 4
 254:	89 27       	eor	r24, r25
 256:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
				 PORTC ^= (1 << PORTC5);
 25a:	98 b1       	in	r25, 0x08	; 8
 25c:	80 e2       	ldi	r24, 0x20	; 32
 25e:	89 27       	eor	r24, r25
 260:	88 b9       	out	0x08, r24	; 8
				 PCMSK0 ^= (1  << PCINT1);
 262:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
 266:	82 e0       	ldi	r24, 0x02	; 2
 268:	89 27       	eor	r24, r25
 26a:	1b c0       	rjmp	.+54     	; 0x2a2 <__vector_3+0xdc>
				 n++;
				 break;
		case 9 : PCMSK0 ^= (1  << PCINT1);
 26c:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
 270:	82 e0       	ldi	r24, 0x02	; 2
 272:	89 27       	eor	r24, r25
 274:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
				 PORTC ^= (1 << PORTC5);
 278:	98 b1       	in	r25, 0x08	; 8
 27a:	80 e2       	ldi	r24, 0x20	; 32
 27c:	89 27       	eor	r24, r25
 27e:	88 b9       	out	0x08, r24	; 8
				 PCMSK2 ^= (1  << PCINT16);
 280:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 284:	81 e0       	ldi	r24, 0x01	; 1
 286:	1b c0       	rjmp	.+54     	; 0x2be <__vector_3+0xf8>
				 n++;
				 break;
		case 15 : PCMSK0 ^= (1  << PCINT6);
 288:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
 28c:	80 e4       	ldi	r24, 0x40	; 64
 28e:	89 27       	eor	r24, r25
 290:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
				  PORTC ^= (1 << PORTC5);
 294:	98 b1       	in	r25, 0x08	; 8
 296:	80 e2       	ldi	r24, 0x20	; 32
 298:	89 27       	eor	r24, r25
 29a:	88 b9       	out	0x08, r24	; 8
				  PCMSK0 ^= (1  << PCINT7);
 29c:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
 2a0:	80 58       	subi	r24, 0x80	; 128
 2a2:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
 2a6:	0e c0       	rjmp	.+28     	; 0x2c4 <__vector_3+0xfe>
				  n++;	
		  		  break;
		case 16 : PCMSK0 ^= (1  << PCINT7);
 2a8:	80 91 6b 00 	lds	r24, 0x006B	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
 2ac:	80 58       	subi	r24, 0x80	; 128
 2ae:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
				  PORTC ^= (1 << PORTC5);
 2b2:	98 b1       	in	r25, 0x08	; 8
 2b4:	80 e2       	ldi	r24, 0x20	; 32
 2b6:	98 27       	eor	r25, r24
 2b8:	98 b9       	out	0x08, r25	; 8
				  PCMSK2 ^= (1  << PCINT21);
 2ba:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 2be:	89 27       	eor	r24, r25
 2c0:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
				  n++;
 2c4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 2c8:	8f 5f       	subi	r24, 0xFF	; 255
 2ca:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
				  break;
		default: break;
	}
	PCIFR = (1 << PCIF0);
 2ce:	81 e0       	ldi	r24, 0x01	; 1
 2d0:	8b bb       	out	0x1b, r24	; 27
}
 2d2:	ff 91       	pop	r31
 2d4:	ef 91       	pop	r30
 2d6:	bf 91       	pop	r27
 2d8:	af 91       	pop	r26
 2da:	9f 91       	pop	r25
 2dc:	8f 91       	pop	r24
 2de:	0f 90       	pop	r0
 2e0:	0f be       	out	0x3f, r0	; 63
 2e2:	0f 90       	pop	r0
 2e4:	1f 90       	pop	r1
 2e6:	18 95       	reti

000002e8 <__vector_5>:

ISR(PCINT2_vect){
 2e8:	1f 92       	push	r1
 2ea:	0f 92       	push	r0
 2ec:	0f b6       	in	r0, 0x3f	; 63
 2ee:	0f 92       	push	r0
 2f0:	11 24       	eor	r1, r1
 2f2:	8f 93       	push	r24
 2f4:	9f 93       	push	r25
 2f6:	af 93       	push	r26
 2f8:	bf 93       	push	r27
 2fa:	ef 93       	push	r30
 2fc:	ff 93       	push	r31
	PCIFR = (1 << PCIF2);
 2fe:	84 e0       	ldi	r24, 0x04	; 4
 300:	8b bb       	out	0x1b, r24	; 27
	switch(n){
 302:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <_edata>
 306:	8e 2f       	mov	r24, r30
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	fc 01       	movw	r30, r24
 30c:	3a 97       	sbiw	r30, 0x0a	; 10
 30e:	ea 30       	cpi	r30, 0x0A	; 10
 310:	f1 05       	cpc	r31, r1
 312:	08 f0       	brcs	.+2      	; 0x316 <__vector_5+0x2e>
 314:	79 c0       	rjmp	.+242    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 316:	e0 5c       	subi	r30, 0xC0	; 192
 318:	ff 4f       	sbci	r31, 0xFF	; 255
 31a:	0c 94 11 02 	jmp	0x422	; 0x422 <__tablejump2__>
		case 10 : PCMSK2 ^= (1  << PCINT16);
 31e:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	89 27       	eor	r24, r25
 326:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
				  PORTC ^= (1 << PORTC5);
 32a:	98 b1       	in	r25, 0x08	; 8
 32c:	80 e2       	ldi	r24, 0x20	; 32
 32e:	89 27       	eor	r24, r25
 330:	88 b9       	out	0x08, r24	; 8
				  PCMSK2 ^= (1  << PCINT17);
 332:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 336:	82 e0       	ldi	r24, 0x02	; 2
 338:	0d c0       	rjmp	.+26     	; 0x354 <__vector_5+0x6c>
				  n++;
				  break;
		case 11 : PCMSK2 ^= (1  << PCINT17);
 33a:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 33e:	82 e0       	ldi	r24, 0x02	; 2
 340:	89 27       	eor	r24, r25
 342:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
				  PORTC ^= (1 << PORTC5);
 346:	98 b1       	in	r25, 0x08	; 8
 348:	80 e2       	ldi	r24, 0x20	; 32
 34a:	89 27       	eor	r24, r25
 34c:	88 b9       	out	0x08, r24	; 8
				  PCMSK2 ^= (1  << PCINT18);
 34e:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 352:	84 e0       	ldi	r24, 0x04	; 4
 354:	89 27       	eor	r24, r25
 356:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
				  n++;
 35a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 35e:	8f 5f       	subi	r24, 0xFF	; 255
 360:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
				  break;
 364:	51 c0       	rjmp	.+162    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
		case 12 : PCMSK2 ^= (1  << PCINT18);
 366:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 36a:	84 e0       	ldi	r24, 0x04	; 4
 36c:	89 27       	eor	r24, r25
 36e:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
				  PORTC ^= (1 << PORTC5);
 372:	98 b1       	in	r25, 0x08	; 8
 374:	80 e2       	ldi	r24, 0x20	; 32
 376:	89 27       	eor	r24, r25
 378:	88 b9       	out	0x08, r24	; 8
				  PCMSK2 ^= (1  << PCINT19);
 37a:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 37e:	88 e0       	ldi	r24, 0x08	; 8
 380:	e9 cf       	rjmp	.-46     	; 0x354 <__vector_5+0x6c>
				  n++;
				  break;
		case 13 : PCMSK2 ^= (1  << PCINT19);
 382:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 386:	88 e0       	ldi	r24, 0x08	; 8
 388:	89 27       	eor	r24, r25
 38a:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
				  PORTC ^= (1 << PORTC5);
 38e:	98 b1       	in	r25, 0x08	; 8
 390:	80 e2       	ldi	r24, 0x20	; 32
 392:	89 27       	eor	r24, r25
 394:	88 b9       	out	0x08, r24	; 8
				  PCMSK2 ^= (1  << PCINT20);
 396:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 39a:	80 e1       	ldi	r24, 0x10	; 16
 39c:	db cf       	rjmp	.-74     	; 0x354 <__vector_5+0x6c>
				  n++;
				  break;
		case 14 : PCMSK2 ^= (1  << PCINT20);
 39e:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 3a2:	80 e1       	ldi	r24, 0x10	; 16
 3a4:	89 27       	eor	r24, r25
 3a6:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
				  PORTC ^= (1 << PORTC5);
 3aa:	98 b1       	in	r25, 0x08	; 8
 3ac:	80 e2       	ldi	r24, 0x20	; 32
 3ae:	89 27       	eor	r24, r25
 3b0:	88 b9       	out	0x08, r24	; 8
				  PCMSK0 ^= (1  << PCINT6);
 3b2:	90 91 6b 00 	lds	r25, 0x006B	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
 3b6:	80 e4       	ldi	r24, 0x40	; 64
 3b8:	89 27       	eor	r24, r25
 3ba:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7e006b>
 3be:	cd cf       	rjmp	.-102    	; 0x35a <__vector_5+0x72>
				  n++;
				  break;
		case 17 : PCMSK2 ^= (1  << PCINT21);
 3c0:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 3c4:	80 e2       	ldi	r24, 0x20	; 32
 3c6:	98 27       	eor	r25, r24
 3c8:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
				  PORTC ^= (1 << PORTC5);
 3cc:	98 b1       	in	r25, 0x08	; 8
 3ce:	89 27       	eor	r24, r25
 3d0:	88 b9       	out	0x08, r24	; 8
		          PCMSK2 ^= (1  << PCINT22);
 3d2:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 3d6:	80 e4       	ldi	r24, 0x40	; 64
 3d8:	bd cf       	rjmp	.-134    	; 0x354 <__vector_5+0x6c>
				  n++;
				  break;
		case 18 : PCMSK2 ^= (1  << PCINT22);
 3da:	90 91 6d 00 	lds	r25, 0x006D	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 3de:	80 e4       	ldi	r24, 0x40	; 64
 3e0:	89 27       	eor	r24, r25
 3e2:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
				  PORTC ^= (1 << PORTC5);
 3e6:	98 b1       	in	r25, 0x08	; 8
 3e8:	80 e2       	ldi	r24, 0x20	; 32
 3ea:	89 27       	eor	r24, r25
 3ec:	88 b9       	out	0x08, r24	; 8
				  PCMSK2 ^= (1  << PCINT23);
 3ee:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 3f2:	80 58       	subi	r24, 0x80	; 128
 3f4:	b0 cf       	rjmp	.-160    	; 0x356 <__vector_5+0x6e>
				  n++;
				  break;
		case 19 : PCMSK2 ^= (1  << PCINT23);
 3f6:	80 91 6d 00 	lds	r24, 0x006D	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
 3fa:	80 58       	subi	r24, 0x80	; 128
 3fc:	80 93 6d 00 	sts	0x006D, r24	; 0x80006d <__TEXT_REGION_LENGTH__+0x7e006d>
				  PORTC ^= (1 << PORTC5);
 400:	98 b1       	in	r25, 0x08	; 8
 402:	80 e2       	ldi	r24, 0x20	; 32
 404:	89 27       	eor	r24, r25
 406:	88 b9       	out	0x08, r24	; 8
				  break;
		default: break;
	}
	PCIFR = (1 << PCIF2);
 408:	84 e0       	ldi	r24, 0x04	; 4
 40a:	8b bb       	out	0x1b, r24	; 27
 40c:	ff 91       	pop	r31
 40e:	ef 91       	pop	r30
 410:	bf 91       	pop	r27
 412:	af 91       	pop	r26
 414:	9f 91       	pop	r25
 416:	8f 91       	pop	r24
 418:	0f 90       	pop	r0
 41a:	0f be       	out	0x3f, r0	; 63
 41c:	0f 90       	pop	r0
 41e:	1f 90       	pop	r1
 420:	18 95       	reti

00000422 <__tablejump2__>:
 422:	ee 0f       	add	r30, r30
 424:	ff 1f       	adc	r31, r31
 426:	05 90       	lpm	r0, Z+
 428:	f4 91       	lpm	r31, Z
 42a:	e0 2d       	mov	r30, r0
 42c:	09 94       	ijmp

0000042e <_exit>:
 42e:	f8 94       	cli

00000430 <__stop_program>:
 430:	ff cf       	rjmp	.-2      	; 0x430 <__stop_program>
